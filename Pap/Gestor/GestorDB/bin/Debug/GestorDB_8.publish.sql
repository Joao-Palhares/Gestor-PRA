/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[tblAlunos]...';


GO
CREATE TABLE [dbo].[tblAlunos] (
    [id_aluno]        INT           IDENTITY (1, 1) NOT NULL,
    [n_processo]      INT           NOT NULL,
    [nome]            VARCHAR (100) NOT NULL,
    [data_nascimento] DATE          NOT NULL,
    [id_curso]        INT           NOT NULL,
    [id_turma]        INT           NOT NULL,
    [numero]          INT           NOT NULL,
    [id_user]         INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_aluno] ASC)
);


GO
PRINT N'Creating [dbo].[tblAvaliacao]...';


GO
CREATE TABLE [dbo].[tblAvaliacao] (
    [id_avaliaçoes]             INT            IDENTITY (1, 1) NOT NULL,
    [avaliaçao_atividade]       VARCHAR (1000) NOT NULL,
    [faltas_desconsideradas]    VARCHAR (1000) NOT NULL,
    [nome_aluno]                VARCHAR (200)  NOT NULL,
    [data_assinatura_aluno]     DATE           NOT NULL,
    [nome_professor]            VARCHAR (200)  NOT NULL,
    [data_assinatura_professor] DATE           NOT NULL,
    [dt_assinatura]             VARCHAR (200)  NOT NULL,
    [data_assinatura_dt]        DATE           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_avaliaçoes] ASC)
);


GO
PRINT N'Creating [dbo].[tblCursos]...';


GO
CREATE TABLE [dbo].[tblCursos] (
    [id_curso]      INT           NOT NULL,
    [nome]          VARCHAR (100) NOT NULL,
    [diretor_curso] VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_curso] ASC),
    CONSTRAINT [UK_tblcursos_dirtor_curso] UNIQUE NONCLUSTERED ([diretor_curso] ASC)
);


GO
PRINT N'Creating [dbo].[tblCursosDisciplinas]...';


GO
CREATE TABLE [dbo].[tblCursosDisciplinas] (
    [id_cursos_disciplinas] INT IDENTITY (1, 1) NOT NULL,
    [id_curso]              INT NOT NULL,
    [id_disciplina]         INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_cursos_disciplinas] ASC)
);


GO
PRINT N'Creating [dbo].[tblCursosModulos]...';


GO
CREATE TABLE [dbo].[tblCursosModulos] (
    [id_cursos_modulos] INT IDENTITY (1, 1) NOT NULL,
    [id_curso]          INT NOT NULL,
    [id_modulo]         INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_cursos_modulos] ASC)
);


GO
PRINT N'Creating [dbo].[tblCursosTurmas]...';


GO
CREATE TABLE [dbo].[tblCursosTurmas] (
    [id_curso_turma] INT IDENTITY (1, 1) NOT NULL,
    [id_curso]       INT NOT NULL,
    [id_turma]       INT NOT NULL
);


GO
PRINT N'Creating [dbo].[tblDecisao]...';


GO
CREATE TABLE [dbo].[tblDecisao] (
    [id_decisao]              INT           IDENTITY (1, 1) NOT NULL,
    [decisao]                 VARCHAR (50)  NOT NULL,
    [data_conselho]           DATE          NOT NULL,
    [consequencia]            VARCHAR (100) NOT NULL,
    [assinatura_diretor]      VARCHAR (50)  NOT NULL,
    [data_assinatura_diretor] DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([id_decisao] ASC)
);


GO
PRINT N'Creating [dbo].[tbldescricaoatividades]...';


GO
CREATE TABLE [dbo].[tbldescricaoatividades] (
    [id_descriçao_atividade] INT           IDENTITY (1, 1) NOT NULL,
    [atividades]             VARCHAR (300) NOT NULL,
    [local]                  VARCHAR (100) NOT NULL,
    [data_inicio]            DATE          NOT NULL,
    [data_final]             DATE          NOT NULL,
    [horario_inicial]        TIME (7)      NULL,
    [horario_final]          TIME (7)      NULL,
    [id_prh]                 INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_descriçao_atividade] ASC)
);


GO
PRINT N'Creating [dbo].[tblDisciplinas]...';


GO
CREATE TABLE [dbo].[tblDisciplinas] (
    [id_disciplina] INT           IDENTITY (1, 1) NOT NULL,
    [nome]          VARCHAR (100) NOT NULL,
    [id_curso]      INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_disciplina] ASC)
);


GO
PRINT N'Creating [dbo].[tblDisciplinasModulos]...';


GO
CREATE TABLE [dbo].[tblDisciplinasModulos] (
    [id_disciplinas_modulos] INT IDENTITY (1, 1) NOT NULL,
    [id_disciplina]          INT NOT NULL,
    [id_modulo]              INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_disciplinas_modulos] ASC)
);


GO
PRINT N'Creating [dbo].[tblEncarregadosEducacao]...';


GO
CREATE TABLE [dbo].[tblEncarregadosEducacao] (
    [id_encedu] INT           IDENTITY (1, 1) NOT NULL,
    [id_aluno]  INT           NOT NULL,
    [Enc_Edu]   VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_encedu] ASC)
);


GO
PRINT N'Creating [dbo].[tblFaltas]...';


GO
CREATE TABLE [dbo].[tblFaltas] (
    [id_falta]          INT  IDENTITY (1, 1) NOT NULL,
    [dia_da_falta]      DATE NOT NULL,
    [tempos_lecionados] INT  NOT NULL,
    [id_disciplina]     INT  NOT NULL,
    [id_modulo]         INT  NOT NULL,
    PRIMARY KEY CLUSTERED ([id_falta] ASC)
);


GO
PRINT N'Creating [dbo].[tblModulos]...';


GO
CREATE TABLE [dbo].[tblModulos] (
    [id_modulo]      INT           IDENTITY (1, 1) NOT NULL,
    [nome]           VARCHAR (100) NOT NULL,
    [tempos_letivos] INT           NOT NULL,
    [id_disciplina]  INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_modulo] ASC)
);


GO
PRINT N'Creating [dbo].[tblPra]...';


GO
CREATE TABLE [dbo].[tblPra] (
    [id_pra]          INT IDENTITY (1, 1) NOT NULL,
    [id_principal]    INT NOT NULL,
    [id_dm]           INT NOT NULL,
    [id_medidas]      INT NOT NULL,
    [id_notificaçoes] INT NOT NULL,
    [id_decisao]      INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_pra] ASC)
);


GO
PRINT N'Creating [dbo].[tblPraDM]...';


GO
CREATE TABLE [dbo].[tblPraDM] (
    [id_dm]                           INT          IDENTITY (1, 1) NOT NULL,
    [disciplina_modulo]               VARCHAR (50) NOT NULL,
    [faltas_excesso]                  INT          NOT NULL,
    [assinatura_professor_disciplina] VARCHAR (50) NOT NULL,
    [data_assinatura]                 DATE         NOT NULL,
    [avaliaçao]                       VARCHAR (50) NOT NULL,
    [retido]                          VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_dm] ASC)
);


GO
PRINT N'Creating [dbo].[tblPraMedidas]...';


GO
CREATE TABLE [dbo].[tblPraMedidas] (
    [id_medidas]             INT           IDENTITY (1, 1) NOT NULL,
    [periodo_inicio]         DATETIME      NOT NULL,
    [periodo_fim]            DATETIME      NOT NULL,
    [medida]                 VARCHAR (300) NOT NULL,
    [cumprimento]            VARCHAR (50)  NOT NULL,
    [data_cumprimento]       DATE          NOT NULL,
    [dever_incumprimento]    VARCHAR (50)  NOT NULL,
    [data_incumprimento]     DATE          NOT NULL,
    [faltas_desconsideradas] VARCHAR (300) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_medidas] ASC)
);


GO
PRINT N'Creating [dbo].[tblPraNotificacoes]...';


GO
CREATE TABLE [dbo].[tblPraNotificacoes] (
    [id_notificaçoes]      INT          IDENTITY (1, 1) NOT NULL,
    [assinatura_enc]       VARCHAR (50) NOT NULL,
    [data_assinatura_enc]  DATE         NOT NULL,
    [assinatura_dt]        VARCHAR (50) NOT NULL,
    [data_assinatura_dt]   DATE         NOT NULL,
    [assinatura_pt]        VARCHAR (50) NOT NULL,
    [data_assinatura_pt]   DATE         NOT NULL,
    [assinatura_cpcj]      VARCHAR (50) NOT NULL,
    [data_assinatura_cpcj] DATE         NOT NULL,
    PRIMARY KEY CLUSTERED ([id_notificaçoes] ASC)
);


GO
PRINT N'Creating [dbo].[tblPraPrincipal]...';


GO
CREATE TABLE [dbo].[tblPraPrincipal] (
    [id_principal] INT           IDENTITY (1, 1) NOT NULL,
    [causa]        VARCHAR (100) NOT NULL,
    [nome_aluno]   VARCHAR (200) NOT NULL,
    [idade]        INT           NOT NULL,
    [ano_letivo]   CHAR (13)     NOT NULL,
    [turma]        VARCHAR (100) NOT NULL,
    [numero_aluno] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_principal] ASC)
);


GO
PRINT N'Creating [dbo].[tblPrh]...';


GO
CREATE TABLE [dbo].[tblPrh] (
    [id_prh]        INT IDENTITY (1, 1) NOT NULL,
    [id_principal]  INT NOT NULL,
    [id_avaliaçoes] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_prh] ASC)
);


GO
PRINT N'Creating [dbo].[tblPrhPrincipal]...';


GO
CREATE TABLE [dbo].[tblPrhPrincipal] (
    [id_principal]         INT           IDENTITY (1, 1) NOT NULL,
    [ano_letivo]           CHAR (13)     NOT NULL,
    [turma]                VARCHAR (100) NOT NULL,
    [numero_aluno]         INT           NOT NULL,
    [nome_aluno]           VARCHAR (200) NOT NULL,
    [curso]                VARCHAR (200) NOT NULL,
    [disciplina]           VARCHAR (50)  NOT NULL,
    [tempo_letivos_faltas] INT           NOT NULL,
    [modalidade_adotada]   VARCHAR (400) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_principal] ASC)
);


GO
PRINT N'Creating [dbo].[tblProfessores]...';


GO
CREATE TABLE [dbo].[tblProfessores] (
    [id_professor]    INT           IDENTITY (1, 1) NOT NULL,
    [nome]            VARCHAR (100) NOT NULL,
    [data_nascimento] DATE          NOT NULL,
    [dt]              VARCHAR (10)  NOT NULL,
    [id_user]         INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_professor] ASC)
);


GO
PRINT N'Creating [dbo].[tblProfessoresDisciplinas]...';


GO
CREATE TABLE [dbo].[tblProfessoresDisciplinas] (
    [id_professores_disciplinas] INT IDENTITY (1, 1) NOT NULL,
    [id_professor]               INT NOT NULL,
    [id_disciplina]              INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_professores_disciplinas] ASC)
);


GO
PRINT N'Creating [dbo].[tblProfessoresPra]...';


GO
CREATE TABLE [dbo].[tblProfessoresPra] (
    [id_professores_pra] INT IDENTITY (1, 1) NOT NULL,
    [id_professor]       INT NOT NULL,
    [id_pra]             INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_professores_pra] ASC)
);


GO
PRINT N'Creating [dbo].[tblProfessoresTurmas]...';


GO
CREATE TABLE [dbo].[tblProfessoresTurmas] (
    [id_professores_turmas] INT IDENTITY (1, 1) NOT NULL,
    [id_turma]              INT NOT NULL,
    [id_professor]          INT NOT NULL,
    PRIMARY KEY CLUSTERED ([id_professores_turmas] ASC)
);


GO
PRINT N'Creating [dbo].[tblTurmas]...';


GO
CREATE TABLE [dbo].[tblTurmas] (
    [id_turma]         INT           IDENTITY (1, 1) NOT NULL,
    [ano_escolaridade] INT           NOT NULL,
    [id_curso]         INT           NOT NULL,
    [diretor_turma]    INT           NOT NULL,
    [nome_turma]       VARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_turma] ASC)
);


GO
PRINT N'Creating [dbo].[tblUsers]...';


GO
CREATE TABLE [dbo].[tblUsers] (
    [id_user]      INT           IDENTITY (1, 1) NOT NULL,
    [username]     VARCHAR (50)  NOT NULL,
    [password]     CHAR (64)     NOT NULL,
    [role]         CHAR (2)      NOT NULL,
    [email]        VARCHAR (256) NOT NULL,
    [isfirstlogin] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_user] ASC),
    CONSTRAINT [UK_tblUsers_username] UNIQUE NONCLUSTERED ([username] ASC)
);


GO
PRINT N'Creating [dbo].[FK_tblAlunos_tblcursos]...';


GO
ALTER TABLE [dbo].[tblAlunos]
    ADD CONSTRAINT [FK_tblAlunos_tblcursos] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblAlunos_tblUsers]...';


GO
ALTER TABLE [dbo].[tblAlunos]
    ADD CONSTRAINT [FK_tblAlunos_tblUsers] FOREIGN KEY ([id_user]) REFERENCES [dbo].[tblUsers] ([id_user]);


GO
PRINT N'Creating [dbo].[FK_tblCursosDisciplinas_tblCurso]...';


GO
ALTER TABLE [dbo].[tblCursosDisciplinas]
    ADD CONSTRAINT [FK_tblCursosDisciplinas_tblCurso] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblCursosDisciplinas_tblDisciplinas]...';


GO
ALTER TABLE [dbo].[tblCursosDisciplinas]
    ADD CONSTRAINT [FK_tblCursosDisciplinas_tblDisciplinas] FOREIGN KEY ([id_disciplina]) REFERENCES [dbo].[tblDisciplinas] ([id_disciplina]);


GO
PRINT N'Creating [dbo].[FK_tblCursosModulos_tblCurso]...';


GO
ALTER TABLE [dbo].[tblCursosModulos]
    ADD CONSTRAINT [FK_tblCursosModulos_tblCurso] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblCursosModulos_tblModulos]...';


GO
ALTER TABLE [dbo].[tblCursosModulos]
    ADD CONSTRAINT [FK_tblCursosModulos_tblModulos] FOREIGN KEY ([id_modulo]) REFERENCES [dbo].[tblModulos] ([id_modulo]);


GO
PRINT N'Creating [dbo].[FK_tblCursosTurmas_tblCursos]...';


GO
ALTER TABLE [dbo].[tblCursosTurmas]
    ADD CONSTRAINT [FK_tblCursosTurmas_tblCursos] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblCursosTurmas_tblTurmas]...';


GO
ALTER TABLE [dbo].[tblCursosTurmas]
    ADD CONSTRAINT [FK_tblCursosTurmas_tblTurmas] FOREIGN KEY ([id_turma]) REFERENCES [dbo].[tblTurmas] ([id_turma]);


GO
PRINT N'Creating [dbo].[FK_tbldescricaoatividades_tblPrh]...';


GO
ALTER TABLE [dbo].[tbldescricaoatividades]
    ADD CONSTRAINT [FK_tbldescricaoatividades_tblPrh] FOREIGN KEY ([id_prh]) REFERENCES [dbo].[tblPrh] ([id_prh]);


GO
PRINT N'Creating [dbo].[FK_tblCursos_tblDisciplinas]...';


GO
ALTER TABLE [dbo].[tblDisciplinas]
    ADD CONSTRAINT [FK_tblCursos_tblDisciplinas] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblDisciplinasModulos_tblDisciplinas]...';


GO
ALTER TABLE [dbo].[tblDisciplinasModulos]
    ADD CONSTRAINT [FK_tblDisciplinasModulos_tblDisciplinas] FOREIGN KEY ([id_disciplina]) REFERENCES [dbo].[tblDisciplinas] ([id_disciplina]);


GO
PRINT N'Creating [dbo].[FK_tblDisciplinasModulos_tblModulos]...';


GO
ALTER TABLE [dbo].[tblDisciplinasModulos]
    ADD CONSTRAINT [FK_tblDisciplinasModulos_tblModulos] FOREIGN KEY ([id_modulo]) REFERENCES [dbo].[tblModulos] ([id_modulo]);


GO
PRINT N'Creating [dbo].[FK_tblEncarregadosEducaçao_tblAlunos]...';


GO
ALTER TABLE [dbo].[tblEncarregadosEducacao]
    ADD CONSTRAINT [FK_tblEncarregadosEducaçao_tblAlunos] FOREIGN KEY ([id_aluno]) REFERENCES [dbo].[tblAlunos] ([id_aluno]);


GO
PRINT N'Creating [dbo].[FK_tblModulos_tblDisciplinas]...';


GO
ALTER TABLE [dbo].[tblModulos]
    ADD CONSTRAINT [FK_tblModulos_tblDisciplinas] FOREIGN KEY ([id_disciplina]) REFERENCES [dbo].[tblDisciplinas] ([id_disciplina]);


GO
PRINT N'Creating [dbo].[FK_tblPra_tblPraPrincipal]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD CONSTRAINT [FK_tblPra_tblPraPrincipal] FOREIGN KEY ([id_principal]) REFERENCES [dbo].[tblPraPrincipal] ([id_principal]);


GO
PRINT N'Creating [dbo].[FK_tblPra_tblPraDM]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD CONSTRAINT [FK_tblPra_tblPraDM] FOREIGN KEY ([id_dm]) REFERENCES [dbo].[tblPraDM] ([id_dm]);


GO
PRINT N'Creating [dbo].[FK_tblPra_tblPraMedidas]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD CONSTRAINT [FK_tblPra_tblPraMedidas] FOREIGN KEY ([id_medidas]) REFERENCES [dbo].[tblPraMedidas] ([id_medidas]);


GO
PRINT N'Creating [dbo].[FK_tblPra_tblPraNotificaçoes]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD CONSTRAINT [FK_tblPra_tblPraNotificaçoes] FOREIGN KEY ([id_notificaçoes]) REFERENCES [dbo].[tblPraNotificacoes] ([id_notificaçoes]);


GO
PRINT N'Creating [dbo].[FK_tblPra_tblDecisao]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD CONSTRAINT [FK_tblPra_tblDecisao] FOREIGN KEY ([id_decisao]) REFERENCES [dbo].[tblDecisao] ([id_decisao]);


GO
PRINT N'Creating [dbo].[FK_tblPrh_tblPrhPrincipal]...';


GO
ALTER TABLE [dbo].[tblPrh]
    ADD CONSTRAINT [FK_tblPrh_tblPrhPrincipal] FOREIGN KEY ([id_principal]) REFERENCES [dbo].[tblPrhPrincipal] ([id_principal]);


GO
PRINT N'Creating [dbo].[FK_tblPrh_tblAvaliacao]...';


GO
ALTER TABLE [dbo].[tblPrh]
    ADD CONSTRAINT [FK_tblPrh_tblAvaliacao] FOREIGN KEY ([id_avaliaçoes]) REFERENCES [dbo].[tblAvaliacao] ([id_avaliaçoes]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresDisciplinas_tblProfessores]...';


GO
ALTER TABLE [dbo].[tblProfessoresDisciplinas]
    ADD CONSTRAINT [FK_tblProfessoresDisciplinas_tblProfessores] FOREIGN KEY ([id_professor]) REFERENCES [dbo].[tblProfessores] ([id_professor]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresDisciplinas_tblDisciplinas]...';


GO
ALTER TABLE [dbo].[tblProfessoresDisciplinas]
    ADD CONSTRAINT [FK_tblProfessoresDisciplinas_tblDisciplinas] FOREIGN KEY ([id_disciplina]) REFERENCES [dbo].[tblDisciplinas] ([id_disciplina]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresPra_tblProfessores]...';


GO
ALTER TABLE [dbo].[tblProfessoresPra]
    ADD CONSTRAINT [FK_tblProfessoresPra_tblProfessores] FOREIGN KEY ([id_professor]) REFERENCES [dbo].[tblProfessores] ([id_professor]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresPra_tblPra]...';


GO
ALTER TABLE [dbo].[tblProfessoresPra]
    ADD CONSTRAINT [FK_tblProfessoresPra_tblPra] FOREIGN KEY ([id_pra]) REFERENCES [dbo].[tblPra] ([id_pra]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresTurmas_tblProfessores]...';


GO
ALTER TABLE [dbo].[tblProfessoresTurmas]
    ADD CONSTRAINT [FK_tblProfessoresTurmas_tblProfessores] FOREIGN KEY ([id_professor]) REFERENCES [dbo].[tblProfessores] ([id_professor]);


GO
PRINT N'Creating [dbo].[FK_tblCursosModulos_tblTurmas]...';


GO
ALTER TABLE [dbo].[tblProfessoresTurmas]
    ADD CONSTRAINT [FK_tblCursosModulos_tblTurmas] FOREIGN KEY ([id_turma]) REFERENCES [dbo].[tblTurmas] ([id_turma]);


GO
PRINT N'Creating [dbo].[FK_tblTurmas_tblCursos]...';


GO
ALTER TABLE [dbo].[tblTurmas]
    ADD CONSTRAINT [FK_tblTurmas_tblCursos] FOREIGN KEY ([id_curso]) REFERENCES [dbo].[tblCursos] ([id_curso]);


GO
PRINT N'Creating [dbo].[FK_tblTurmas_tblProfessores]...';


GO
ALTER TABLE [dbo].[tblTurmas]
    ADD CONSTRAINT [FK_tblTurmas_tblProfessores] FOREIGN KEY ([diretor_turma]) REFERENCES [dbo].[tblProfessores] ([id_professor]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ac66d93b-f39b-47b9-b434-73e5a6f9fe6d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ac66d93b-f39b-47b9-b434-73e5a6f9fe6d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd299466a-b913-4be5-83c2-88babb7e4e08')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d299466a-b913-4be5-83c2-88babb7e4e08')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '82fc3b0e-dc13-48be-ad62-972ee00b14d5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('82fc3b0e-dc13-48be-ad62-972ee00b14d5')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO

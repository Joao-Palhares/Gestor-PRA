/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_tbldescricaoatividades_tblPrh]...';


GO
ALTER TABLE [dbo].[tbldescricaoatividades] DROP CONSTRAINT [FK_tbldescricaoatividades_tblPrh];


GO
PRINT N'Starting rebuilding table [dbo].[tbldescricaoatividades]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tbldescricaoatividades] (
    [id_descriçao_atividade] INT            IDENTITY (1, 1) NOT NULL,
    [atividades]             VARCHAR (1000) NOT NULL,
    [local]                  VARCHAR (1000) NOT NULL,
    [data_inicio]            DATETIME       NOT NULL,
    [data_final]             DATETIME       NOT NULL,
    [cumprimento]            VARCHAR (15)   NULL,
    [id_prh]                 INT            NULL,
    [codigo_descricao]       CHAR (50)      NOT NULL,
    PRIMARY KEY CLUSTERED ([id_descriçao_atividade] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tbldescricaoatividades])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tbldescricaoatividades] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tbldescricaoatividades] ([id_descriçao_atividade], [atividades], [local], [data_inicio], [data_final], [id_prh], [codigo_descricao])
        SELECT   [id_descriçao_atividade],
                 [atividades],
                 [local],
                 [data_inicio],
                 [data_final],
                 [id_prh],
                 [codigo_descricao]
        FROM     [dbo].[tbldescricaoatividades]
        ORDER BY [id_descriçao_atividade] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tbldescricaoatividades] OFF;
    END

DROP TABLE [dbo].[tbldescricaoatividades];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tbldescricaoatividades]', N'tbldescricaoatividades';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_tbldescricaoatividades_tblPrh]...';


GO
ALTER TABLE [dbo].[tbldescricaoatividades] WITH NOCHECK
    ADD CONSTRAINT [FK_tbldescricaoatividades_tblPrh] FOREIGN KEY ([id_prh]) REFERENCES [dbo].[tblPrh] ([id_prh]);


GO
PRINT N'Altering [dbo].[sp_UpdateDescricaoAtividadesByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdateDescricaoAtividadesByID]
	@id_descriçao_atividade int,
	@atividades varchar(1000),
	@local varchar(1000),
	@data_inicio date,
	@data_final date,
	@id_prh int,
	@cumprimento varchar(50),
	@codigo_descricao char(50)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tbldescricaoatividades
	where id_descriçao_atividade=@id_descriçao_atividade

	if(@count=0)
		begin
			select -1 as ReturnCode100
		End
	Else
	Begin
		update tbldescricaoatividades 
		set atividades=@atividades,local=@local,data_inicio=@data_inicio,data_final=@data_final,id_prh=@id_prh,cumprimento=@cumprimento,codigo_descricao=@codigo_descricao
		where id_descriçao_atividade=@id_descriçao_atividade
		select 1 as ReturnCode10
	END
END
GO
PRINT N'Refreshing [dbo].[sp_GetDescricaoAtividadesByCode]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDescricaoAtividadesByCode]';


GO
PRINT N'Refreshing [dbo].[sp_GetDescricaoAtividadesByPrh]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDescricaoAtividadesByPrh]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDescricaoatividades]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDescricaoatividades]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDescricaoatividades2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDescricaoatividades2]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDescricaoatividades3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDescricaoatividades3]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDescricaoatividades4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDescricaoatividades4]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDescricaoatividades5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDescricaoatividades5]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tbldescricaoatividades] WITH CHECK CHECK CONSTRAINT [FK_tbldescricaoatividades_tblPrh];


GO
PRINT N'Update complete.';


GO

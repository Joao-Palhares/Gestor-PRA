/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[tblAlunos].[pra] on table [dbo].[tblAlunos] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblAlunos])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 9c07c0a6-f187-45eb-a442-c5480fee55d4, af84a50c-1695-4497-b497-59091775dd58 is skipped, element [dbo].[tblAlunos].[PrAa] (SqlSimpleColumn) will not be renamed to pra';


GO
PRINT N'Altering [dbo].[tblAlunos]...';


GO
ALTER TABLE [dbo].[tblAlunos]
    ADD [pra] VARCHAR (5) NOT NULL;


GO
PRINT N'Altering [dbo].[sp_InsertAluno]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertAluno]
	@nome varchar(100),
	@n_processo int,
	@data_nascimento date,
	@id_curso int,
	@id_turma int,
	@numero int,
	@id_user int,
	@pra varchar(5)
AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_aluno) FROM tblAlunos Where n_processo=@n_processo

	IF(@count<>0)
	begin 
		select -1 as ReturnCode1
	End
	Begin
		Insert INTO [dbo].[tblAlunos]
				([nome_aluno],
				[n_processo],
				[data_nascimento],
				[id_curso],
				[id_turma],
				[numero],
				[id_user],
				[pra])
		Values (@nome,@n_processo,@data_nascimento,@id_curso,@id_turma,@numero,@id_user,@pra)
		select 1 as ReturnCode1
	END
END
GO
PRINT N'Altering [dbo].[sp_UpdateAlunoByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdateAlunoByID]
	@id_aluno int,
	@n_processo varchar(50),
	@nome char(64),
	@data_nascimento date,
	@id_curso int,
	@id_turma int,
	@numero int,
	@pra varchar(5)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblAlunos
	where id_aluno=@id_aluno

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblAlunos 
		set n_processo=@n_processo , nome_aluno=@nome , data_nascimento = @data_nascimento, id_curso = @id_curso, id_turma= @id_turma, numero= @numero, pra=@pra 
		where id_aluno=@id_aluno
		select 1 as ReturnCode
	END
END
GO
PRINT N'Refreshing [dbo].[sp_DeleteAlunoByID]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_DeleteAlunoByID]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByID]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByID]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByName]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByName]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByNumturma]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByNumturma]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByProcesso]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByProcesso]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByTurma]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByTurma]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunoByUserID]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunoByUserID]';


GO
PRINT N'Refreshing [dbo].[sp_GetAlunos]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAlunos]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByAluno]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByAluno]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByDT]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByDT]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor1]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor1]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor2]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor3]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor4]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor5]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor6]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor6]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrhsByAluno]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrhsByAluno]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrhsByDT]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrhsByDT]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrhsByProfessor]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrhsByProfessor]';


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9c07c0a6-f187-45eb-a442-c5480fee55d4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9c07c0a6-f187-45eb-a442-c5480fee55d4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'af84a50c-1695-4497-b497-59091775dd58')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('af84a50c-1695-4497-b497-59091775dd58')

GO

GO
PRINT N'Update complete.';


GO

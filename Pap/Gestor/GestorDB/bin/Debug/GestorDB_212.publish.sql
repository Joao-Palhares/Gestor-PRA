/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[tblPra].[ndisciplinas] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPra])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering [dbo].[tblPra]...';


GO
ALTER TABLE [dbo].[tblPra]
    ADD [ndisciplinas] INT NOT NULL;


GO
PRINT N'Altering [dbo].[sp_UpdatePraByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdatePraByID]
	@id_pra int,
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20),
	@id_aluno int,
	@id_turma int, 
	@id_dt int,
	@estado varchar(100),
	@progresso varchar(100),
	@id_professor1 int,
	@id_professor2 int,
	@id_professor3 int,
	@id_professor4 int,
	@id_professor5 int,
	@id_professor6 int,
	@ndisciplinas int


AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPra
	where id_pra=@id_pra

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPra 
		set id_principal=@id_principal , id_medidas=@id_medidas , id_notificaçoes = @id_notificaçoes,id_decisao=@id_decisao, codigo_pra= @codigo_pra, id_aluno=@id_aluno,id_turma=@id_turma,id_dt=@id_dt,estado=@estado,progresso=@progresso,id_professor1=@id_professor1,id_professor2=@id_professor2,id_professor3=@id_professor3,id_professor4=@id_professor4,id_professor5=@id_professor5,id_professor6=@id_professor6, ndisciplinas=@ndisciplinas
		where id_pra=@id_pra
		select 1 as ReturnCode
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@dmcode char(50),
	@id_professor int,
	@id_pra int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[dmcode],
				[id_professor],
				[id_pra])
		Values (@disciplina_modulo,@faltas_excesso,@dmcode,@id_professor,@id_pra)
		select 1 as ReturnCode2
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM2]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM2]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@dmcode char(50),
	@id_professor int,
	@id_pra int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[dmcode],
				[id_professor],
				[id_pra])
		Values (@disciplina_modulo,@faltas_excesso,@dmcode,@id_professor,@id_pra)
		select 1 as ReturnCode22
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM3]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM3]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@dmcode char(50),
	@id_professor int,
	@id_pra int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[dmcode],
				[id_professor],
				[id_pra])
		Values (@disciplina_modulo,@faltas_excesso,@dmcode,@id_professor,@id_pra)
		select 1 as ReturnCode23
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM4]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM4]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@dmcode char(50),
	@id_professor int,
	@id_pra int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[dmcode],
				[id_professor],
				[id_pra])
		Values (@disciplina_modulo,@faltas_excesso,@dmcode,@id_professor,@id_pra)
		select 1 as ReturnCode24
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM5]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM5]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@dmcode char(50),
	@id_professor int,
	@id_pra int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[dmcode],
				[id_professor],
				[id_pra])
		Values (@disciplina_modulo,@faltas_excesso,@dmcode,@id_professor,@id_pra)
		select 1 as ReturnCode25
	END
END
GO
PRINT N'Refreshing [dbo].[sp_GetPra]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPra]';


GO
PRINT N'Refreshing [dbo].[sp_GetPraByCode]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPraByCode]';


GO
PRINT N'Refreshing [dbo].[sp_GetPraByID]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPraByID]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByAluno]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByAluno]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByDT]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByDT]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor1]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor1]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor2]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor3]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor4]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor5]';


GO
PRINT N'Refreshing [dbo].[sp_GetPrasByProfessor6]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPrasByProfessor6]';


GO
PRINT N'Refreshing [dbo].[sp_InsertPra]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertPra]';


GO
PRINT N'Update complete.';


GO

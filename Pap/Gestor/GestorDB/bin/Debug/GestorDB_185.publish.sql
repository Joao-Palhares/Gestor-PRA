/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[tblPra].[estado] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[tblPra].[id_aluno] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[tblPra].[id_dt] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[tblPra].[id_turma] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[tblPra].[progresso] on table [dbo].[tblPra] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column id_principal on table [dbo].[tblPra] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPra])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[tblPraDM].[id_professor] on table [dbo].[tblPraDM] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPraDM])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key cec8edec-590f-4080-9a56-171abf03c09c is skipped, element [dbo].[tblPra].[id_] (SqlSimpleColumn) will not be renamed to id_turma';


GO
PRINT N'Altering [dbo].[tblPra]...';


GO
ALTER TABLE [dbo].[tblPra] ALTER COLUMN [id_principal] INT NOT NULL;


GO
ALTER TABLE [dbo].[tblPra]
    ADD [id_aluno]      INT           NOT NULL,
        [id_turma]      INT           NOT NULL,
        [id_dt]         INT           NOT NULL,
        [estado]        VARCHAR (100) NOT NULL,
        [progresso]     VARCHAR (100) NOT NULL,
        [id_professor1] INT           NULL,
        [id_professor2] INT           NULL,
        [id_professor3] INT           NULL,
        [id_professor4] INT           NULL,
        [id_professor5] INT           NULL,
        [id_professor6] INT           NULL;


GO
PRINT N'Altering [dbo].[tblPraDM]...';


GO
ALTER TABLE [dbo].[tblPraDM]
    ADD [id_professor] INT NOT NULL;


GO
PRINT N'Altering [dbo].[sp_InsertPra]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPra]
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20),
	@id_aluno int,
	@id_turma int,
	@id_dt int,
	@estado varchar(100),
	@progresso varchar(100),
	@id_professor1 int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_pra) FROM tblPra 

	IF(@count<>0)
	begin 
		select -1 as ReturnCodepra
	End
	Begin
		Insert INTO [dbo].[tblPra]
				([id_principal],
				[id_medidas],
				[id_notificaçoes],
				[id_decisao],
				[codigo_pra],
				[id_aluno],
				[id_turma],
				[id_dt],
				[estado],
				[progresso],
				[id_professor1])
		Values (@id_principal,@id_medidas,@id_notificaçoes,@id_decisao,@codigo_pra,@id_aluno,@id_turma,@id_dt,@estado,@progresso,@id_professor1)
		select 1 as ReturnCodepra
	END
END
GO
PRINT N'Altering [dbo].[sp_UpdatePraByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdatePraByID]
	@id_pra int,
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20),
	@id_aluno int,
	@id_turma int, 
	@id_dt int,
	@estado varchar(100),
	@progresso varchar(100),
	@id_professor1 int,
	@id_professor2 int,
	@id_professor3 int,
	@id_professor4 int,
	@id_professor5 int,
	@id_professor6 int


AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPra
	where id_pra=@id_pra

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPra 
		set id_principal=@id_principal , id_medidas=@id_medidas , id_notificaçoes = @id_notificaçoes,id_decisao=@id_decisao, codigo_pra= @codigo_pra, id_aluno=@id_aluno,id_turma=@id_turma,id_dt=@id_dt,estado=@estado,progresso=@progresso,id_professor1=@id_professor1,id_professor2=@id_professor2,id_professor3=@id_professor3,id_professor4=@id_professor4,id_professor5=@id_professor5,id_professor6=@id_professor6
		where id_pra=@id_pra
		select 1 as ReturnCode
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50),
	@id_professor int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode],
				[id_professor])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode,@id_professor)
		select 1 as ReturnCode2
	END
END
GO
PRINT N'Creating [dbo].[sp_GetPraByID]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPraByID]
	@id_pra int

AS
begin
		select * From tblPra where id_pra=@id_pra
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByAluno]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByAluno]
@id_aluno int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_aluno=@id_aluno
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByDT]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByDT]
@id_dt int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_dt=@id_dt
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor1]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor1]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor1=@id_professor
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor2]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor2]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor2=@id_professor
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor3]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor3]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor3=@id_professor
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor4]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor4]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor4=@id_professor
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor5]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor5]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor5=@id_professor
END
GO
PRINT N'Creating [dbo].[sp_GetPrasByProfessor6]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrasByProfessor6]
@id_professor int
AS
BEGIN
	SELECT tblPra.id_pra ,tblAlunos.id_aluno,tblAlunos.nome_aluno,tblProfessores.id_professor,tblProfessores.nome_professor,tblTurmas.id_turma ,tblTurmas.nome_turma , tblDT.id_dt ,tblDT.nome_dt, tblPra.estado,tblPra.progresso
FROM tblPra
INNER JOIN tblprofessores ON tblPra.id_professor1=tblProfessores.id_professor
INNER JOIN tblAlunos ON tblPra.id_aluno = tblAlunos.id_aluno 
INNER JOIN tblTurmas ON tblPra.id_turma = tblTurmas.id_turma 
INNER JOIN tblDT ON tblPra.id_dt = tblDT.id_dt where tblPra.id_professor6=@id_professor
END
GO
PRINT N'Refreshing [dbo].[sp_GetPraByCode]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPraByCode]';


GO
PRINT N'Refreshing [dbo].[sp_GetDMByCode]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDMByCode]';


GO
PRINT N'Refreshing [dbo].[sp_GetDMByCode2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDMByCode2]';


GO
PRINT N'Refreshing [dbo].[sp_GetDMByCode3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDMByCode3]';


GO
PRINT N'Refreshing [dbo].[sp_GetDMByCode4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDMByCode4]';


GO
PRINT N'Refreshing [dbo].[sp_GetDMByCode5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetDMByCode5]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDM2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDM2]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDM3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDM3]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDM4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDM4]';


GO
PRINT N'Refreshing [dbo].[sp_InsertDM5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_InsertDM5]';


GO
PRINT N'Refreshing [dbo].[sp_UpdateDMByID1]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_UpdateDMByID1]';


GO
PRINT N'Refreshing [dbo].[sp_UpdateDMByID2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_UpdateDMByID2]';


GO
PRINT N'Refreshing [dbo].[sp_UpdateDMByID3]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_UpdateDMByID3]';


GO
PRINT N'Refreshing [dbo].[sp_UpdateDMByID4]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_UpdateDMByID4]';


GO
PRINT N'Refreshing [dbo].[sp_UpdateDMByID5]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_UpdateDMByID5]';


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cec8edec-590f-4080-9a56-171abf03c09c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cec8edec-590f-4080-9a56-171abf03c09c')

GO

GO
PRINT N'Update complete.';


GO

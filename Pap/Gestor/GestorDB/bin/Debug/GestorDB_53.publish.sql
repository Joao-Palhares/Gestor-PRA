/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file e1e4cc13-f745-4971-8687-4931b6c24d1e';

PRINT N'Rename [dbo].[tblPraDM].[cumprimento] to avaliaçao';


GO
EXECUTE sp_rename @objname = N'[dbo].[tblPraDM].[cumprimento]', @newname = N'avaliaçao', @objtype = N'COLUMN';


GO
PRINT N'Altering [dbo].[sp_InsertDM]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode)
		select 1 as ReturnCode2
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM2]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM2]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode)
		select 1 as ReturnCode22
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM3]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM3]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode)
		select 1 as ReturnCode23
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM4]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM4]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				([disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode)
		select 1 as ReturnCode24
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertDM5]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertDM5]
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@dmcode char(50)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_dm) FROM tblPraDM

	IF(@count<>0)
	begin 
		select -1 as ReturnCode2
	End
	Begin
		Insert INTO [dbo].[tblPraDM]
				(				[disciplina_modulo],
				[faltas_excesso],
				[assinatura_professor_disciplina],
				[data_assinatura],
				[avaliaçao],
				[retido],
				[dmcode])
		Values (@disciplina_modulo,@faltas_excesso,@assinatura_professor_disciplina,@data_assinatura,@avaliaçao,@retido,@dmcode)
		select 1 as ReturnCode25
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdateDMByID1]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdateDMByID1]
	@id_dm int,
	@disciplina_modulo varchar(50),
	@faltas_excesso int,
	@assinatura_professor_disciplina varchar(50),
	@data_assinatura date,
	@avaliaçao varchar(50),
	@retido varchar(50),
	@id_pra int,
	@dmcode char(50)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPraDM
	where id_dm=@id_dm

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPraDM 
		set id_dm=@id_dm , disciplina_modulo=@disciplina_modulo , faltas_excesso = @faltas_excesso, assinatura_professor_disciplina = @assinatura_professor_disciplina, data_assinatura= @data_assinatura, avaliaçao = @avaliaçao, retido=@retido
		where id_dm=@id_dm
		select 1 as ReturnCode
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdatePraByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdatePraByID]
	@id_pra int,
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPra
	where id_pra=@id_pra

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPra 
		set id_principal=@id_principal , id_medidas=@id_medidas , id_notificaçoes = @id_notificaçoes, id_decisao = @id_decisao, codigo_pra= @codigo_pra
		where id_pra=@id_pra
		select 1 as ReturnCode
	END
END
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e1e4cc13-f745-4971-8687-4931b6c24d1e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e1e4cc13-f745-4971-8687-4931b6c24d1e')

GO

GO
PRINT N'Update complete.';


GO

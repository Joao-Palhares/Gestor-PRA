/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[tblPrh].[id_descricao_atividade] on table [dbo].[tblPrh] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column id_principal on table [dbo].[tblPrh] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPrh])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column codigo_prhprincipal on table [dbo].[tblPrhPrincipal] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column id_aluno in table [dbo].[tblPrhPrincipal] is currently  VARCHAR (200) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPrhPrincipal])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'The following operation was generated from a refactoring log file ce5e5127-be3b-4298-841e-c8f7f2d383ad';

PRINT N'Rename [dbo].[tblPrhPrincipal].[nome_aluno] to id_aluno';


GO
EXECUTE sp_rename @objname = N'[dbo].[tblPrhPrincipal].[nome_aluno]', @newname = N'id_aluno', @objtype = N'COLUMN';


GO
PRINT N'Dropping [dbo].[FK_tbldescricaoatividades_tblPrh]...';


GO
ALTER TABLE [dbo].[tbldescricaoatividades] DROP CONSTRAINT [FK_tbldescricaoatividades_tblPrh];


GO
PRINT N'Dropping [dbo].[FK_tblPrh_tblAvaliacao]...';


GO
ALTER TABLE [dbo].[tblPrh] DROP CONSTRAINT [FK_tblPrh_tblAvaliacao];


GO
PRINT N'Dropping [dbo].[FK_tblPrh_tblPrhPrincipal]...';


GO
ALTER TABLE [dbo].[tblPrh] DROP CONSTRAINT [FK_tblPrh_tblPrhPrincipal];


GO
PRINT N'Starting rebuilding table [dbo].[tblPrh]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPrh] (
    [id_prh]                 INT          IDENTITY (1, 1) NOT NULL,
    [id_principal]           INT          NOT NULL,
    [id_descricao_atividade] INT          NOT NULL,
    [id_avaliaçoes]          INT          NULL,
    [codigo_prh]             VARCHAR (70) NOT NULL,
    [id_professor]           INT          NULL,
    PRIMARY KEY CLUSTERED ([id_prh] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPrh])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPrh] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblPrh] ([id_prh], [id_principal], [id_avaliaçoes], [codigo_prh], [id_professor])
        SELECT   [id_prh],
                 [id_principal],
                 [id_avaliaçoes],
                 [codigo_prh],
                 [id_professor]
        FROM     [dbo].[tblPrh]
        ORDER BY [id_prh] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPrh] OFF;
    END

DROP TABLE [dbo].[tblPrh];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPrh]', N'tblPrh';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[tblPrhPrincipal]...';


GO
ALTER TABLE [dbo].[tblPrhPrincipal] ALTER COLUMN [codigo_prhprincipal] CHAR (45) NOT NULL;

ALTER TABLE [dbo].[tblPrhPrincipal] ALTER COLUMN [id_aluno] INT NOT NULL;


GO
PRINT N'Creating [dbo].[FK_tbldescricaoatividades_tblPrh]...';


GO
ALTER TABLE [dbo].[tbldescricaoatividades] WITH NOCHECK
    ADD CONSTRAINT [FK_tbldescricaoatividades_tblPrh] FOREIGN KEY ([id_prh]) REFERENCES [dbo].[tblPrh] ([id_prh]);


GO
PRINT N'Creating [dbo].[FK_tblPrh_tblAvaliacao]...';


GO
ALTER TABLE [dbo].[tblPrh] WITH NOCHECK
    ADD CONSTRAINT [FK_tblPrh_tblAvaliacao] FOREIGN KEY ([id_avaliaçoes]) REFERENCES [dbo].[tblAvaliacao] ([id_avaliaçoes]);


GO
PRINT N'Creating [dbo].[FK_tblPrh_tblPrhPrincipal]...';


GO
ALTER TABLE [dbo].[tblPrh] WITH NOCHECK
    ADD CONSTRAINT [FK_tblPrh_tblPrhPrincipal] FOREIGN KEY ([id_principal]) REFERENCES [dbo].[tblPrhPrincipal] ([id_principal]);


GO
PRINT N'Altering [dbo].[sp_InsertPrh]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPrh]
	@id_prh int,
	@id_principal int,
	@id_avaliaçoes int,
	@codigo_prh varchar(70),
	@id_professor int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_prh) FROM tblPrh

	IF(@count<>0)
	begin 
		select -1 as ReturnCode
	End
	Begin
		Insert INTO [dbo].[tblPrh]
				([id_principal],
				[id_avaliaçoes],
				[codigo_prh],
				[id_professor])
		Values (@id_principal,@id_avaliaçoes,@codigo_prh,@id_professor)
		select 1 as ReturnCode
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertPrhPrincipal]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPrhPrincipal]
	@ano_letivo char(13),
	@turma varchar(100),
	@numero_aluno int,
	@id_aluno int,
	@curso varchar(200),
	@disciplina varchar(50),
	@tempo_letivos_faltas int,
	@modalidade_adotada varchar(400),
	@outra_modalidade varchar(100),
	@codigo_prhprincipal char(45)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_principal) FROM tblPrhPrincipal Where id_principal=id_principal

	IF(@count<>0)
	begin 
		select -1 as ReturnCode1
	End
	Begin
		Insert INTO [dbo].[tblPrhPrincipal]
				([ano_letivo],
				[turma],
				[numero_aluno],
				[id_aluno],
				[curso],
				[disciplina],
				[tempo_letivos_faltas],
				[modalidade_adotada],
				[outra_modalidade],
				[codigo_prhprincipal])
		Values (@ano_letivo,@turma,@numero_aluno,@id_aluno,@curso,@disciplina,@tempo_letivos_faltas,@modalidade_adotada,@outra_modalidade,@codigo_prhprincipal)
		select 1 as ReturnCode1
	END
END
GO
PRINT N'Altering [dbo].[sp_UpdatePrhPrincipalByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdatePrhPrincipalByID]
	@id_principal int,
	@ano_letivo char(13),
	@turma varchar(100),
	@numero_aluno int,
	@id_aluno int,
	@curso varchar(200),
	@disciplina varchar(50),
	@tempo_letivos_faltas int,
	@modalidade_adotada varchar(400),
	@outra_modalidade varchar(100),
	@codigo_prhprincipal char(45),
	@id_prh int
AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPrhPrincipal
	where id_principal=@id_principal

	if(@count=0)
		begin
			select -1 as ReturnCode100
		End
	Else
	Begin
		update tblPrhPrincipal 
		set ano_letivo=@ano_letivo, turma=@turma, numero_aluno=@numero_aluno, id_aluno=@id_aluno , curso=@curso ,disciplina=@disciplina ,tempo_letivos_faltas=@tempo_letivos_faltas , modalidade_adotada=@modalidade_adotada , outra_modalidade=@outra_modalidade ,codigo_prhprincipal=@codigo_prhprincipal, id_prh=@id_prh
		where id_principal=@id_principal
		select 1 as ReturnCode10
	END
END
GO
PRINT N'Creating [dbo].[sp_GetDescricaoAtividadesByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetDescricaoAtividadesByCode]
	@codigo_descricao char(50)
AS
begin
		select * From tbldescricaoatividades where codigo_descricao=@codigo_descricao
END
GO
PRINT N'Creating [dbo].[sp_GetPrhAvaliacaoByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrhAvaliacaoByCode]
	@codigo_avaliacao char(65)
AS
begin
		select * From tblAvaliacao where codigo_avaliacao=@codigo_avaliacao
END
GO
PRINT N'Creating [dbo].[sp_GetPrhByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrhByCode]
	@codigo_prh char(70)
AS
begin
		select * From tblPrh where codigo_prh=@codigo_prh
END
GO
PRINT N'Creating [dbo].[sp_GetPrhPrincipalByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPrhPrincipalByCode]
	@codigo_prhprincipal varchar(45)
AS
begin
		select * From tblPrhPrincipal where codigo_prhprincipal=@codigo_prhprincipal
END
GO
PRINT N'Creating [dbo].[sp_UpdateDescricaoAtividadesByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdateDescricaoAtividadesByID]
	@id_descriçao_atividade int,
	@atividades varchar(1000),
	@local varchar(1000),
	@data_inicio date,
	@data_final date,
	@horario_inicial time(7),
	@horario_final time(7),
	@id_prh int,
	@codigo_descricao char(50)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tbldescricaoatividades
	where id_descriçao_atividade=@id_descriçao_atividade

	if(@count=0)
		begin
			select -1 as ReturnCode100
		End
	Else
	Begin
		update tbldescricaoatividades 
		set atividades=@atividades,local=@local,data_inicio=@data_inicio,data_final=@data_final,horario_inicial=@horario_inicial,horario_final=@horario_final,id_prh=@id_prh,codigo_descricao=@codigo_descricao
		where id_descriçao_atividade=@id_descriçao_atividade
		select 1 as ReturnCode10
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdatePrhByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdatePrhByID]
	@id_prh int,
	@id_principal int,
	@id_descricao_atividade int,
	@codigo_prh char(70),
	@id_professor int,
	@id_avaliaçoes int
AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPrh
	where id_prh=@id_prh

	if(@count=0)
		begin
			select -1 as ReturnCode100
		End
	Else
	Begin
		update tblPrh 
		set id_principal=@id_principal,id_descricao_atividade=@id_descricao_atividade,codigo_prh=@codigo_prh,id_professor=@id_professor,id_avaliaçoes=@id_avaliaçoes
		where id_prh=@id_prh
		select 1 as ReturnCode10
	END
END
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ce5e5127-be3b-4298-841e-c8f7f2d383ad')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ce5e5127-be3b-4298-841e-c8f7f2d383ad')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tbldescricaoatividades] WITH CHECK CHECK CONSTRAINT [FK_tbldescricaoatividades_tblPrh];

ALTER TABLE [dbo].[tblPrh] WITH CHECK CHECK CONSTRAINT [FK_tblPrh_tblAvaliacao];

ALTER TABLE [dbo].[tblPrh] WITH CHECK CHECK CONSTRAINT [FK_tblPrh_tblPrhPrincipal];


GO
PRINT N'Update complete.';


GO

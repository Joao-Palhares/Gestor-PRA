/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_tblPraDMLigacao_tblPra]...';


GO
ALTER TABLE [dbo].[tblPraDMLigacao] DROP CONSTRAINT [FK_tblPraDMLigacao_tblPra];


GO
PRINT N'Dropping [dbo].[FK_tblProfessoresPra_tblPra]...';


GO
ALTER TABLE [dbo].[tblProfessoresPra] DROP CONSTRAINT [FK_tblProfessoresPra_tblPra];


GO
PRINT N'Starting rebuilding table [dbo].[tblPra]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPra] (
    [id_pra]          INT          IDENTITY (1, 1) NOT NULL,
    [id_principal]    INT          NULL,
    [id_medidas]      INT          NULL,
    [id_notificaçoes] INT          NULL,
    [id_decisao]      INT          NULL,
    [codigo_pra]      VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([id_pra] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPra])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPra] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblPra] ([id_pra], [id_principal], [id_medidas], [id_notificaçoes], [codigo_pra])
        SELECT   [id_pra],
                 [id_principal],
                 [id_medidas],
                 [id_notificaçoes],
                 [codigo_pra]
        FROM     [dbo].[tblPra]
        ORDER BY [id_pra] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPra] OFF;
    END

DROP TABLE [dbo].[tblPra];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPra]', N'tblPra';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_tblPraDMLigacao_tblPra]...';


GO
ALTER TABLE [dbo].[tblPraDMLigacao] WITH NOCHECK
    ADD CONSTRAINT [FK_tblPraDMLigacao_tblPra] FOREIGN KEY ([id_pra]) REFERENCES [dbo].[tblPra] ([id_pra]);


GO
PRINT N'Creating [dbo].[FK_tblProfessoresPra_tblPra]...';


GO
ALTER TABLE [dbo].[tblProfessoresPra] WITH NOCHECK
    ADD CONSTRAINT [FK_tblProfessoresPra_tblPra] FOREIGN KEY ([id_pra]) REFERENCES [dbo].[tblPra] ([id_pra]);


GO
PRINT N'Altering [dbo].[sp_InsertPra]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPra]
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_pra) FROM tblPra 

	IF(@count<>0)
	begin 
		select -1 as ReturnCodepra
	End
	Begin
		Insert INTO [dbo].[tblPra]
				([id_principal],
				[id_medidas],
				[id_notificaçoes],
				[id_decisao],
				[codigo_pra])
		Values (@id_principal,@id_medidas,@id_notificaçoes,@id_decisao,@codigo_pra)
		select 1 as ReturnCodepra
	END
END
GO
PRINT N'Altering [dbo].[sp_UpdatePraByID]...';


GO
ALTER PROCEDURE [dbo].[sp_UpdatePraByID]
	@id_pra int,
	@id_principal int,
	@id_medidas int,
	@id_notificaçoes int,
	@id_decisao int,
	@codigo_pra varchar(20)

AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPra
	where id_pra=@id_pra

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPra 
		set id_principal=@id_principal , id_medidas=@id_medidas , id_notificaçoes = @id_notificaçoes,id_decisao=@id_decisao, codigo_pra= @codigo_pra
		where id_pra=@id_pra
		select 1 as ReturnCode
	END
END
GO
PRINT N'Creating [dbo].[sp_GetDecisaoByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetDecisaoByCode]
	@decisao_code varchar(61)
AS
begin
		select * From tblDecisao where decisao_code=@decisao_code
END
GO
PRINT N'Creating [dbo].[sp_GetMedidasByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetMedidasByCode]
	@codemedidas varchar(60)
AS
begin
		select * From tblPraMedidas where codemedidas=@codemedidas
END
GO
PRINT N'Creating [dbo].[sp_GetNotificacoesByCode]...';


GO
CREATE PROCEDURE [dbo].[sp_GetNotificacoesByCode]
	@codenotificaçoes varchar(65)
AS
begin
		select * From tblPraNotificacoes where codenotificaçoes=@codenotificaçoes
END
GO
PRINT N'Refreshing [dbo].[sp_GetPraByCode]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetPraByCode]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tblPraDMLigacao] WITH CHECK CHECK CONSTRAINT [FK_tblPraDMLigacao_tblPra];

ALTER TABLE [dbo].[tblProfessoresPra] WITH CHECK CHECK CONSTRAINT [FK_tblProfessoresPra_tblPra];


GO
PRINT N'Update complete.';


GO

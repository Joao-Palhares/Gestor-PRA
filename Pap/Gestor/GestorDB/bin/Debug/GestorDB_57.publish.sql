/*
Deployment script for GestorDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GestorDB"
:setvar DefaultFilePrefix "GestorDB"
:setvar DefaultDataPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\jonip\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[tblPraMedidas].[codemedidas] on table [dbo].[tblPraMedidas] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPraMedidas])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[tblPraNotificacoes].[codenotificaçoes] on table [dbo].[tblPraNotificacoes] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPraNotificacoes])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[tblPraPrincipal].[codepraprincipal] on table [dbo].[tblPraPrincipal] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[tblPraPrincipal])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 0c92dc01-a838-46ac-8636-e1ba425fbb51 is skipped, element [dbo].[tblPraMedidas].[Medidas] (SqlSimpleColumn) will not be renamed to codemedidas';


GO
PRINT N'Starting rebuilding table [dbo].[tblPraMedidas]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPraMedidas] (
    [id_medidas]             INT           IDENTITY (1, 1) NOT NULL,
    [periodo_inicio]         DATETIME      NOT NULL,
    [periodo_fim]            DATETIME      NOT NULL,
    [medida]                 VARCHAR (300) NOT NULL,
    [cumprimento]            VARCHAR (50)  NULL,
    [data_cumprimento]       DATE          NULL,
    [dever_incumprimento]    VARCHAR (50)  NULL,
    [data_incumprimento]     DATE          NULL,
    [faltas_desconsideradas] VARCHAR (300) NOT NULL,
    [codemedidas]            CHAR (60)     NOT NULL,
    [id_pra]                 INT           NULL,
    PRIMARY KEY CLUSTERED ([id_medidas] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPraMedidas])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraMedidas] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblPraMedidas] ([id_medidas], [periodo_inicio], [periodo_fim], [medida], [cumprimento], [data_cumprimento], [dever_incumprimento], [data_incumprimento], [faltas_desconsideradas], [id_pra])
        SELECT   [id_medidas],
                 [periodo_inicio],
                 [periodo_fim],
                 [medida],
                 [cumprimento],
                 [data_cumprimento],
                 [dever_incumprimento],
                 [data_incumprimento],
                 [faltas_desconsideradas],
                 [id_pra]
        FROM     [dbo].[tblPraMedidas]
        ORDER BY [id_medidas] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraMedidas] OFF;
    END

DROP TABLE [dbo].[tblPraMedidas];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPraMedidas]', N'tblPraMedidas';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[tblPraNotificacoes]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPraNotificacoes] (
    [id_notificaçoes]      INT          IDENTITY (1, 1) NOT NULL,
    [assinatura_enc]       VARCHAR (50) NOT NULL,
    [data_assinatura_enc]  DATE         NOT NULL,
    [assinatura_dt]        VARCHAR (50) NOT NULL,
    [data_assinatura_dt]   DATE         NOT NULL,
    [assinatura_pt]        VARCHAR (50) NOT NULL,
    [data_assinatura_pt]   DATE         NOT NULL,
    [data_assinatura_cpcj] DATE         NOT NULL,
    [codenotificaçoes]     CHAR (65)    NOT NULL,
    [id_pra]               INT          NULL,
    PRIMARY KEY CLUSTERED ([id_notificaçoes] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPraNotificacoes])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraNotificacoes] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblPraNotificacoes] ([id_notificaçoes], [assinatura_enc], [data_assinatura_enc], [assinatura_dt], [data_assinatura_dt], [assinatura_pt], [data_assinatura_pt], [data_assinatura_cpcj], [id_pra])
        SELECT   [id_notificaçoes],
                 [assinatura_enc],
                 [data_assinatura_enc],
                 [assinatura_dt],
                 [data_assinatura_dt],
                 [assinatura_pt],
                 [data_assinatura_pt],
                 [data_assinatura_cpcj],
                 [id_pra]
        FROM     [dbo].[tblPraNotificacoes]
        ORDER BY [id_notificaçoes] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraNotificacoes] OFF;
    END

DROP TABLE [dbo].[tblPraNotificacoes];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPraNotificacoes]', N'tblPraNotificacoes';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[tblPraPrincipal]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPraPrincipal] (
    [id_principal]     INT           IDENTITY (1, 1) NOT NULL,
    [nome_aluno]       VARCHAR (200) NOT NULL,
    [idade]            INT           NOT NULL,
    [ano_letivo]       CHAR (13)     NOT NULL,
    [turma]            VARCHAR (100) NOT NULL,
    [numero_aluno]     INT           NOT NULL,
    [codepraprincipal] CHAR (70)     NOT NULL,
    [id_pra]           INT           NULL,
    PRIMARY KEY CLUSTERED ([id_principal] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPraPrincipal])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraPrincipal] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblPraPrincipal] ([id_principal], [nome_aluno], [idade], [ano_letivo], [turma], [numero_aluno], [id_pra])
        SELECT   [id_principal],
                 [nome_aluno],
                 [idade],
                 [ano_letivo],
                 [turma],
                 [numero_aluno],
                 [id_pra]
        FROM     [dbo].[tblPraPrincipal]
        ORDER BY [id_principal] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblPraPrincipal] OFF;
    END

DROP TABLE [dbo].[tblPraPrincipal];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPraPrincipal]', N'tblPraPrincipal';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[sp_InsertMedidas]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertMedidas]
	@periodo_inicio datetime,
	@periodo_fim datetime,
	@medida varchar(300),
	@cumprimento varchar(50),
	@data_cumprimento date,
	@dever_incumprimento varchar(50),
	@data_incumprimento date,
	@faltas_desconsideradas varchar(300),
	@codemedidas char(60)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_medidas) FROM tblPraMedidas

	IF(@count<>0)
	begin 
		select -1 as ReturnCode4
	End
	Begin
		Insert INTO [dbo].[tblPraMedidas]
				([periodo_inicio],
				[periodo_fim],
				[medida],
				[cumprimento],
				[data_cumprimento],
				[dever_incumprimento],
				[data_incumprimento],
				[faltas_desconsideradas],
				[codemedidas])
		Values (@periodo_inicio,@periodo_fim,@medida,@cumprimento,@data_cumprimento,@dever_incumprimento,@data_incumprimento,@faltas_desconsideradas,@codemedidas)
		select 1 as ReturnCode4
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertNotificacoes]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertNotificacoes]
	@assinatura_enc varchar(50),
	@data_assinatura_enc date,
	@assinatura_dt varchar(50),
	@data_assinatura_dt date,
	@assinatura_pt varchar(50),
	@data_assinatura_pt date,
	@data_assinatura_cpcj date,
	@codenotificaçoes char(65)

AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_notificaçoes) FROM tblPraNotificacoes

	IF(@count<>0)
	begin 
		select -1 as ReturnCode4
	End
	Begin
		Insert INTO [dbo].[tblPraNotificacoes]
				([assinatura_enc],
				[data_assinatura_enc],
				[assinatura_dt],
				[data_assinatura_dt],
				[assinatura_pt],
				[data_assinatura_pt],
				[data_assinatura_cpcj],
				[codenotificaçoes])
		Values (@assinatura_enc,@data_assinatura_enc,@assinatura_dt,@data_assinatura_dt,@assinatura_pt,@data_assinatura_pt,@data_assinatura_cpcj,@codenotificaçoes)
		select 1 as ReturnCode4
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertPrincipal]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPrincipal]
	@nome_aluno varchar(200),
	@idade int,
	@ano_letivo char(13),
	@turma varchar(100),
	@numero_aluno int,
	@codepraprincipal CHAR(70)
AS
Begin
	Declare @count int
	SELECT @count= COUNT(id_principal) FROM tblPraPrincipal

	IF(@count<>0)
	begin 
		select -1 as ReturnCode
	End
	Begin
		Insert INTO [dbo].[tblPraPrincipal]
				([nome_aluno],
				[idade],
				[ano_letivo],
				[turma],
				[numero_aluno],
				[codepraprincipal])
		Values (@nome_aluno,@idade,@ano_letivo,@turma,@numero_aluno,@codepraprincipal)
		select 1 as ReturnCode
	END
END
GO
PRINT N'Altering [dbo].[sp_InsertPraDMLigacao]...';


GO
ALTER PROCEDURE [dbo].[sp_InsertPraDMLigacao]
	@id_pra int,
	@id_dm int

AS
Begin
	Declare @count int
	SELECT @count= COUNT(Id_pra_dm) FROM tblPraDMLigacao

	IF(@count<>0)
	begin 
		select -1 as returnCodePraDMlig
	End
	Begin
		Insert INTO [dbo].[tblPraDMLigacao]
				([id_pra],
				[id_dm])
		Values (@id_pra,@id_dm)
		select 1 as returnCodePraDMlig
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdateMedidasByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdateMedidasByID]
	@id_medidas int,
	@periodo_inicio datetime,
	@periodo_fim datetime,
	@medida varchar(300),
	@cumprimento varchar(50),
	@data_cumprimento date,
	@dever_incumprimento varchar(50),
	@data_incumprimento date,
	@faltas_desconsideradas varchar(300),
	@id_pra int


AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPraMedidas
	where id_medidas=@id_medidas

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPraMedidas 
		set periodo_inicio=@periodo_inicio , periodo_fim=@periodo_fim, medida=@medida, cumprimento=@cumprimento, data_cumprimento=@data_cumprimento, dever_incumprimento=@dever_incumprimento, data_incumprimento=@data_incumprimento ,faltas_desconsideradas=@faltas_desconsideradas , id_pra=@id_pra
		where id_medidas=@id_medidas
		select 1 as ReturnCode
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdateNotificaçoesByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdateNotificaçoesByID]
	@id_notificaçoes int,
	@assinatura_enc varchar(50),
	@data_assinatura_enc date,
	@assinatura_dt varchar(50),
	@data_assinatura_dt date,
	@assinatura_pt varchar(50),
	@data_assinatura_pt date,
	@data_assinatura_cpcj date,
	@codenotificaçoes char(65),
	@id_pra int


AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPraNotificacoes

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPraNotificacoes 
		set assinatura_enc=@assinatura_enc , data_assinatura_enc=@data_assinatura_enc, assinatura_dt=@assinatura_dt, data_assinatura_dt=@data_assinatura_dt, assinatura_pt=@assinatura_pt, data_assinatura_pt=@data_assinatura_pt, data_assinatura_cpcj=@data_assinatura_cpcj ,codenotificaçoes=@codenotificaçoes , id_pra=@id_pra
		where id_notificaçoes=@id_notificaçoes
		select 1 as ReturnCode
	END
END
GO
PRINT N'Creating [dbo].[sp_UpdatePraPrincipalByID]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdatePraPrincipalByID]
	@id_principal int,
	@nome_aluno varchar(200),
	@idade int,
	@ano_letivo char(13),
	@turma varchar(100),
	@numero_aluno int,
	@codepraprincipal char(70),
	@id_pra int
AS
begin
	declare @count int 
	SELECT @count = COUNT (*) from tblPraPrincipal
	where id_pra=@id_pra

	if(@count=0)
		begin
			select -1 as ReturnCode
		End
	Else
	Begin
		update tblPraPrincipal 
		set id_principal=@id_principal , nome_aluno=@nome_aluno , idade = @idade, ano_letivo = @ano_letivo, turma= @turma, numero_aluno=@numero_aluno,codepraprincipal=@codepraprincipal,id_pra=@id_pra
		where id_pra=@id_pra
		select 1 as ReturnCode
	END
END
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0c92dc01-a838-46ac-8636-e1ba425fbb51')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0c92dc01-a838-46ac-8636-e1ba425fbb51')

GO

GO
PRINT N'Update complete.';


GO
